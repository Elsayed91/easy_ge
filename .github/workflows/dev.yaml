name: CI/CD Pipeline (Dev Branch)

on:
  push:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: 'test'
      AWS_SECRET_ACCESS_KEY: 'test'
    # services:
    #   localstack:
    #     image: localstack/localstack
    #     env:
    #       SERVICES: s3
    #     ports:
    #       - 4572:4572
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    - run: 
        poetry install --all-extras
          
    # - name: Lint with flake8
    #   run: |
    #     poetry run flake8 . || true
    # - name: Check import order with isort
    #   run: |
    #     poetry run isort --check-only --diff . || true
    # - name: Run tests
    #   run: |
    #     poetry run pytest tests/ -s
    - name: Integration Test with Localstack
      run: |
        # poetry run localstack start -d
        # poetry run awslocal s3 mb s3://mybucket
        # poetry run awslocal s3 cp tests/test_configs/expectations/yellow.json s3://mybucket/expectations/
        
        # poetry run  python -c "from easy_ge import easy_validation; easy_validation('tests/test_configs/sample_config.yaml')"
        
        # echo "run_validation exited without error, checking if artifacts were loaded to S3"
        # poetry run awslocal s3 ls s3://mybucket/expectations/ | grep -q yellow.json || (echo 'Expectations directory is empty' && exit 1)
        # poetry run awslocal s3 ls s3://mybucket/validations/ | grep -q .ge_store_backend_id || (echo 'Validations directory is empty' && exit 1)
        # poetry run awslocal s3 ls s3://mybucket/docs/ | grep -q 'index.html' || (echo 'Docs directory is empty' && exit 1)
        
        # echo "looking to see if CSV was downloaded."
        # FILENAME=yellow-$(date +%Y-%m-%d).csv
        # test -f $FILENAME && echo "File $FILENAME exists." || exit 1
        # echo "Test Execution complete!" 
        # rm $FILENAME
        docker pull localstack/localstack         # Make sure to pull the latest version of the image
        poetry run bash tests/integration/run_integration.sh
 